/**
 * This file was generated by:
 *   relay-compiler
 *
 * @providesModule RegisterMutation.graphql
 * @generated SignedSource<<e0d0c3f680d041809dff51c529cf21b8>>
 * @relayHash 6a7fcab47b9ebd01821c927d423cc51d
 * @flow
 * @nogrep
 */

/* eslint-disable */

'use strict';

/*::
import type {ConcreteBatch} from 'relay-runtime';
export type RegisterInput = {
  email?: ?string;
  password?: ?string;
  firstName?: ?string;
  lastName?: ?string;
  role?: ?string;
};

export type RegisterMutationResponse = {
  user?: ?RegisterMutationResponse_user;
};

export type RegisterMutationResponse_user = {
  role?: ?string;
};
*/

/*
mutation RegisterMutation(
  $input: RegisterInput!
) {
  register(input: $input) {
    user {
      role
      id
    }
  }
}
*/

const batch /*: ConcreteBatch*/ = {
  fragment: {
    argumentDefinitions: [
      {
        kind: 'LocalArgument',
        name: 'input',
        type: 'RegisterInput!',
        defaultValue: null,
      },
    ],
    kind: 'Fragment',
    metadata: null,
    name: 'RegisterMutation',
    selections: [
      {
        kind: 'LinkedField',
        alias: null,
        args: [
          {
            kind: 'Variable',
            name: 'input',
            variableName: 'input',
            type: 'RegisterInput!',
          },
        ],
        concreteType: 'RegisterPayload',
        name: 'register',
        plural: false,
        selections: [
          {
            kind: 'LinkedField',
            alias: null,
            args: null,
            concreteType: 'User',
            name: 'user',
            plural: false,
            selections: [
              {
                kind: 'ScalarField',
                alias: null,
                args: null,
                name: 'role',
                storageKey: null,
              },
            ],
            storageKey: null,
          },
        ],
        storageKey: null,
      },
    ],
    type: 'Mutation',
  },
  id: null,
  kind: 'Batch',
  metadata: {},
  name: 'RegisterMutation',
  query: {
    argumentDefinitions: [
      {
        kind: 'LocalArgument',
        name: 'input',
        type: 'RegisterInput!',
        defaultValue: null,
      },
    ],
    kind: 'Root',
    name: 'RegisterMutation',
    operation: 'mutation',
    selections: [
      {
        kind: 'LinkedField',
        alias: null,
        args: [
          {
            kind: 'Variable',
            name: 'input',
            variableName: 'input',
            type: 'RegisterInput!',
          },
        ],
        concreteType: 'RegisterPayload',
        name: 'register',
        plural: false,
        selections: [
          {
            kind: 'LinkedField',
            alias: null,
            args: null,
            concreteType: 'User',
            name: 'user',
            plural: false,
            selections: [
              {
                kind: 'ScalarField',
                alias: null,
                args: null,
                name: 'role',
                storageKey: null,
              },
              {
                kind: 'ScalarField',
                alias: null,
                args: null,
                name: 'id',
                storageKey: null,
              },
            ],
            storageKey: null,
          },
        ],
        storageKey: null,
      },
    ],
  },
  text: 'mutation RegisterMutation(\n  $input: RegisterInput!\n) {\n  register(input: $input) {\n    user {\n      role\n      id\n    }\n  }\n}\n',
};

module.exports = batch;
