/**
 * This file was generated by:
 *   relay-compiler
 *
 * @providesModule LoginMutation.graphql
 * @generated SignedSource<<0b323139b1ede9732dadf8dc0352f4b1>>
 * @relayHash cd73b0d1cfa5eec7b8f83bf096aa3b3b
 * @flow
 * @nogrep
 */

/* eslint-disable */

'use strict';

/*::
import type {ConcreteBatch} from 'relay-runtime';
export type LoginInput = {
  email?: ?string;
  password?: ?string;
  id?: ?string;
};

export type LoginMutationResponse = {
  user?: ?LoginMutationResponse_user;
};

export type LoginMutationResponse_user = {
  role?: ?string;
  postCount?: ?number;
};
*/

/*
mutation LoginMutation(
  $input: LoginInput!
) {
  login(input: $input) {
    user {
      role
      postCount
      id
    }
  }
}
*/

const batch /*: ConcreteBatch*/ = {
  fragment: {
    argumentDefinitions: [
      {
        kind: 'LocalArgument',
        name: 'input',
        type: 'LoginInput!',
        defaultValue: null,
      },
    ],
    kind: 'Fragment',
    metadata: null,
    name: 'LoginMutation',
    selections: [
      {
        kind: 'LinkedField',
        alias: null,
        args: [
          {
            kind: 'Variable',
            name: 'input',
            variableName: 'input',
            type: 'LoginInput!',
          },
        ],
        concreteType: 'LoginPayload',
        name: 'login',
        plural: false,
        selections: [
          {
            kind: 'LinkedField',
            alias: null,
            args: null,
            concreteType: 'User',
            name: 'user',
            plural: false,
            selections: [
              {
                kind: 'ScalarField',
                alias: null,
                args: null,
                name: 'role',
                storageKey: null,
              },
              {
                kind: 'ScalarField',
                alias: null,
                args: null,
                name: 'postCount',
                storageKey: null,
              },
            ],
            storageKey: null,
          },
        ],
        storageKey: null,
      },
    ],
    type: 'Mutation',
  },
  id: null,
  kind: 'Batch',
  metadata: {},
  name: 'LoginMutation',
  query: {
    argumentDefinitions: [
      {
        kind: 'LocalArgument',
        name: 'input',
        type: 'LoginInput!',
        defaultValue: null,
      },
    ],
    kind: 'Root',
    name: 'LoginMutation',
    operation: 'mutation',
    selections: [
      {
        kind: 'LinkedField',
        alias: null,
        args: [
          {
            kind: 'Variable',
            name: 'input',
            variableName: 'input',
            type: 'LoginInput!',
          },
        ],
        concreteType: 'LoginPayload',
        name: 'login',
        plural: false,
        selections: [
          {
            kind: 'LinkedField',
            alias: null,
            args: null,
            concreteType: 'User',
            name: 'user',
            plural: false,
            selections: [
              {
                kind: 'ScalarField',
                alias: null,
                args: null,
                name: 'role',
                storageKey: null,
              },
              {
                kind: 'ScalarField',
                alias: null,
                args: null,
                name: 'postCount',
                storageKey: null,
              },
              {
                kind: 'ScalarField',
                alias: null,
                args: null,
                name: 'id',
                storageKey: null,
              },
            ],
            storageKey: null,
          },
        ],
        storageKey: null,
      },
    ],
  },
  text: 'mutation LoginMutation(\n  $input: LoginInput!\n) {\n  login(input: $input) {\n    user {\n      role\n      postCount\n      id\n    }\n  }\n}\n',
};

module.exports = batch;
